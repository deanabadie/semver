/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package semver;

import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.util.stream.Collectors;

public class SemverTools {

    private static final String SEMVER_REGEX_PATTERN = "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$";

    public static boolean isValidSemver(String version) {
        Pattern pattern = Pattern.compile(SEMVER_REGEX_PATTERN);
        Matcher matcher = pattern.matcher(version);
        return matcher.find();
    }
    public static List<String> sortAscending(List<String> versionsList) {
        List<Semver> semverList = versionsList.stream().map(Semver::new).sorted(new AscendingSemverComparator())
                .collect(Collectors.toList());
        return semverList.stream().map(Semver::toString).collect(Collectors.toList());
    }

    public static List<String> sortDescending(List<String> versionsList) {
        List<Semver> semverList = versionsList.stream().map(Semver::new).sorted(new DescendingSemverComparator())
                .collect(Collectors.toList());
        return semverList.stream().map(Semver::toString).collect(Collectors.toList());
    }

    public static String getLatestVersion(List<String> versionsList) {
        return versionsList.stream().map(Semver::new)
                .sorted(new DescendingSemverComparator())
                .findFirst()
                .map(Semver::toString).orElse(null);
    }

    public static String getOldestVersion(List<String> versionsList) {
        return versionsList.stream().map(Semver::new)
                .sorted(new AscendingSemverComparator())
                .findFirst()
                .map(Semver::toString).orElse(null);
    }
}
