/**
 * This Java source file was generated by the Gradle 'init' task.
 */
package semver;

import org.junit.jupiter.api.Test;

import java.util.Arrays;
import java.util.List;

import static org.junit.jupiter.api.Assertions.*;
import static semver.utils.SemverConstants.INVALID_VERSIONS;
import static semver.utils.SemverConstants.VALID_VERSIONS;

class SemverToolsTest {

    @Test
    void isValidSemverWithValidVersionReturnsTrue() {
        SemverTools classUnderTest = new SemverTools();
        VALID_VERSIONS.forEach(version -> assertTrue(SemverTools.isValidSemver(version)));
    }

    @Test
    void isValidSemverWithInvalidVersionReturnsFalse() {
        SemverTools classUnderTest = new SemverTools();
        INVALID_VERSIONS.forEach(version -> assertFalse(SemverTools.isValidSemver(version)));
    }

    @Test
    void isSemverVersionListWithSameVersionCoreSortedAscendingReturnsTrue() {
        List<String> versionsList = Arrays.asList("1.0.0", "1.0.0-alpha.beta", "1.0.0-alpha", "1.0.0-beta.11", "1.0.0-rc.1", "1.0.0-beta.2", "1.0.0-alpha.1", "1.0.0-beta");
        List<String> expectedResult = Arrays.asList("1.0.0-alpha", "1.0.0-alpha.1", "1.0.0-alpha.beta", "1.0.0-beta", "1.0.0-beta.2", "1.0.0-beta.11", "1.0.0-rc.1", "1.0.0");
        List<String> sortedVersionsList = SemverTools.sortAscending(versionsList);
        assertIterableEquals(expectedResult, sortedVersionsList);
    }

    @Test
    void isSemverVersionListWithDifferentVersionCoreSortedAscendingReturnsTrue() {
        List<String> versionsList = Arrays.asList("1.0.0", "2.1.0", "2.1.1", "2.0.0");
        List<String> expectedResult = Arrays.asList("1.0.0", "2.0.0", "2.1.0", "2.1.1");
        List<String> sortedVersionsList = SemverTools.sortAscending(versionsList);
        assertIterableEquals(expectedResult, sortedVersionsList);
    }

    @Test
    void isSemverVersionListWithSameVersionCoreSortedDescendingReturnsTrue() {
        List<String> versionsList = Arrays.asList("1.0.0", "1.0.0-alpha.beta", "1.0.0-alpha", "1.0.0-beta.11", "1.0.0-rc.1", "1.0.0-beta.2", "1.0.0-alpha.1", "1.0.0-beta");
        List<String> expectedResult = Arrays.asList("1.0.0", "1.0.0-rc.1", "1.0.0-beta.11", "1.0.0-beta.2", "1.0.0-beta", "1.0.0-alpha.beta", "1.0.0-alpha.1", "1.0.0-alpha");
        List<String> sortedVersionsList = SemverTools.sortDescending(versionsList);
        assertIterableEquals(expectedResult, sortedVersionsList);
    }

    @Test
    void isSemverVersionListWithDifferentVersionCoreSortedDescendingReturnsTrue() {
        List<String> versionsList = Arrays.asList("1.0.0", "2.1.0", "2.1.1", "2.0.0");
        List<String> expectedResult = Arrays.asList("2.1.1", "2.1.0", "2.0.0", "1.0.0");
        List<String> sortedVersionsList = SemverTools.sortDescending(versionsList);
        assertIterableEquals(expectedResult, sortedVersionsList);
    }

    @Test
    void getLatestVersionWithSameVersionCoreReturnsTrue() {
        List<String> versionsList = Arrays.asList("1.0.0", "1.0.0-alpha.beta", "1.0.0-alpha", "1.0.0-beta.11", "1.0.0-rc.1", "1.0.0-beta.2", "1.0.0-alpha.1", "1.0.0-beta");
        String expectedResult = "1.0.0";
        String actualResult = SemverTools.getLatestVersion(versionsList);
        assertEquals(expectedResult, actualResult);
    }

    @Test
    void getLatestVersionWithDifferentVersionCoreReturnsTrue() {
        List<String> versionsList = Arrays.asList("1.0.0", "2.1.0", "2.1.1", "2.0.0");
        String expectedResult = "2.1.1";
        String actualResult = SemverTools.getLatestVersion(versionsList);
        assertEquals(expectedResult, actualResult);
    }

    @Test
    void getOldestVersionWithSameVersionCoreReturnsTrue() {
        List<String> versionsList = Arrays.asList("1.0.0", "1.0.0-alpha.beta", "1.0.0-alpha", "1.0.0-beta.11", "1.0.0-rc.1", "1.0.0-beta.2", "1.0.0-alpha.1", "1.0.0-beta");
        String expectedResult = "1.0.0-alpha";
        String actualResult = SemverTools.getOldestVersion(versionsList);
        assertEquals(expectedResult, actualResult);
    }

    @Test
    void getOldestVersionWithDifferentVersionCoreReturnsTrue() {
        List<String> versionsList = Arrays.asList("1.0.0", "2.1.0", "2.1.1", "2.0.0");
        String expectedResult = "1.0.0";
        String actualResult = SemverTools.getOldestVersion(versionsList);
        assertEquals(expectedResult, actualResult);
    }
}
